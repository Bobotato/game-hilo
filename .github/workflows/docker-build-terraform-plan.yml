name: Docker Build/Push and Terraform plan

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - 'master'

permissions: write-all

env:
  TF_LOG: INFO
  TF_INPUT: false

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DH_LOGIN_USERNAME }}
          password: ${{ secrets.DH_LOGIN_PASSWORD }}
      
      - name: Build and push API Dockerfile
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./api.Dockerfile
          push: true
          tags: valenciaga/hilogame_api:latest

      - name: Build and push frontend Dockerfile
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: valenciaga/hilogame_frontend:latest


  terraform-plan:
    runs-on: ubuntu-latest
    needs: docker-build-push
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.7'
      
      - name: Terraform Init
        id: init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        id: validate
        if: success() || failure()
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ./terraform
        run: terraform plan -no-color -var "pvt_key=${{ secrets.SSH_PVT_KEY }}" -var "do_token=${{ secrets.DO_PAT }}" -out=tfplan
      
      - name: Add Plan Comment
        id: comment
        uses: actions/github-script@v7
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
            Show Plan
          
            \`\`\`${process.env.PLAN}\`\`\`
          
          
          
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
