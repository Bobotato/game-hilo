name: Terraform apply

on:
  pull_request:
    types: 
        - edited
    branches:
        - 'master-test'

permissions: write-all

env:
  TF_LOG: INFO
  TF_INPUT: false


jobs:

  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.7'
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_PAT }}

      - name: Terraform Init
        id: init
        working-directory: ./terraform
        run: terraform init

      - name: Download tfplan
        id: download-plan
        uses: actions/download-artifact@v3
        with:
          github_token: ${{ secrets.GH_PAT }}
          workflow: terraform-plan.yml
          name: tfplan
          path: ./terraform/tfplan

      - name: Terraform apply
        id: apply
        working-directory: ./terraform
        run: |
          terraform apply -input=false -no-color tfplan

      
      - name: Add Apply Comment
        id: comment-apply
        uses: actions/github-script@v7
        env:
          PLAN: "terraform\n${{ steps.apply.outputs.apply }}"
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const output = `### Terraform Apply `${{ steps.apply.outcome }}\`
            Show Apply
          
            \`\`\`${process.env.PLAN}\`\`\`
          
          
          
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
