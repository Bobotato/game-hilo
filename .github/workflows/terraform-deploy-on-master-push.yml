name: Terraform apply

on:
  pull_request:
    types: 
        - edited
    branches:
        - 'master-test'

    workflow_dispatch:

permissions: write-all

env:
  TF_LOG: INFO
  TF_INPUT: false


jobs:

  terraform-apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.7'
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_PAT }}

      - name: Terraform Init
        id: init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: ./terraform
        run: terraform plan -no-color -var "pvt_key=${{ secrets.SSH_PVT_KEY }}" -var "do_token=${{ secrets.DO_PAT }}" -out=tfplan

      - name: Terraform apply
        id: apply
        working-directory: ./terraform
        env:
          dockerhub_username: ${{ secrets.DH_LOGIN_USERNAME }}
          dockerhub_password: ${{ secrets.DH_LOGIN_PASSWORD }}
        run: |
          terraform apply -auto-approve -no-color tfplan

      - name: Terraform destroy on failure
        id: destroy
        if: failure()
        run: |
         terraform destroy -no-color -auto-approve -var "pvt_key=${{ secrets.SSH_PVT_KEY }}" -var "do_token=${{ secrets.DO_PAT }}"

      - name: Add Apply Comment
        id: comment
        uses: actions/github-script@v7
        env:
          PLAN: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Apply üìñ\`${{ steps.apply.outcome }}\`
      
            Show Plan
          
            \`\`\`${process.env.PLAN}\`\`\`
          
          
          
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: PWD
        run: |
          pwd

      - name: Run Ansible
        id: run-ansible 
        uses: dawidd6/action-ansible-playbook@v2
        with: 
          directory: ./
          playbook: playbook.yml
          key: ${{ secrets.SSH_PVT_KEY }}
          options: |
            --inventory terraform/inventory
            --user root
